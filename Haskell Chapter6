-- HC6T1: Factorial (Recursive)
factorial :: Int -> Int
factorial 0 = 1
factorial n = n * factorial (n - 1)

-- HC6T2: Fibonacci (Recursive)
fibonacci :: Int -> Int
fibonacci 0 = 0
fibonacci 1 = 1
fibonacci n = fibonacci (n - 1) + fibonacci (n - 2)

-- HC6T3: Sum of Elements Using foldr
sumFoldr :: [Int] -> Int
sumFoldr = foldr (+) 0

-- HC6T4: Product of Elements Using foldl
productFoldl :: [Int] -> Int
productFoldl = foldl (*) 1

-- HC6T5: Reverse a List (Recursive)
reverseList :: [a] -> [a]
reverseList [] = []
reverseList (x:xs) = reverseList xs ++ [x]

-- HC6T6: Element Exists in List
elementExists :: Eq a => a -> [a] -> Bool
elementExists _ [] = False
elementExists x (y:ys) = (x == y) || elementExists x ys

-- HC6T7: List Length
listLength :: [a] -> Int
listLength [] = 0
listLength (_:xs) = 1 + listLength xs

-- HC6T8: Filter Even Numbers
filterEvens :: [Int] -> [Int]
filterEvens = filter even

-- HC6T9: Map Implementation
mapFunction :: (a -> b) -> [a] -> [b]
mapFunction _ [] = []
mapFunction f (x:xs) = f x : mapFunction f xs

-- HC6T10: Digits of a Number (Recursive)
digits :: Int -> [Int]
digits n
  | n < 10    = [n]
  | otherwise = digits (n `div` 10) ++ [n `mod` 10]

-- Main function to test all tasks
main :: IO ()
main = do
  putStrLn "-- HC6T1: Factorial --"
  print (factorial 5)

  putStrLn "\n-- HC6T2: Fibonacci --"
  print (fibonacci 7)

  putStrLn "\n-- HC6T3: Sum with foldr --"
  print (sumFoldr [1, 2, 3, 4, 5])

  putStrLn "\n-- HC6T4: Product with foldl --"
  print (productFoldl [1, 2, 3, 4])

  putStrLn "\n-- HC6T5: Reverse List --"
  print (reverseList [1, 2, 3, 4])

  putStrLn "\n-- HC6T6: Element Exists --"
  print (elementExists 3 [1, 2, 3, 4])
  print (elementExists 5 [1, 2, 3, 4])

  putStrLn "\n-- HC6T7: List Length --"
  print (listLength [10, 20, 30, 40])

  putStrLn "\n-- HC6T8: Filter Even Numbers --"
  print (filterEvens [1..10])

  putStrLn "\n-- HC6T9: Map Function (Double Values) --"
  print (mapFunction (*2) [1, 2, 3, 4])

  putStrLn "\n-- HC6T10: Digits of a Number --"
  print (digits 12345)
